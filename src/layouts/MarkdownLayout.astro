---
import { getRelativeLocaleUrl } from "astro:i18n";
import Card from "../components/Card.astro";
import Layout from "./Layout.astro";

export type MarkdownPageProps = {
  // page matadata
  title: string;
  description: string;
  author: string;

  pubDate: Date;
  image: {
    url: string;
    alt: string;
  };
  location?: string;
  tags?: string[];
};

const { frontmatter } = Astro.props as { frontmatter: MarkdownPageProps };
const lang = (Astro.currentLocale || "en") as "en" | "zh";
---

<Layout
  title={frontmatter.title}
  description={frontmatter.description}
  author={frontmatter.author}
>
  <Card id={frontmatter.title} prose>
    <article>
      <!-- title -->
      <h1>{frontmatter.title}</h1>
      <!-- author and location -->
      <div class="flex flex-col gap-0 text-gray-500">
        {frontmatter.author && <p class="mb-0">{frontmatter.author} </p>}
        {
          frontmatter.pubDate && (
            <p class="mt-0">
              {lang === "zh"
                ? `写于 ${frontmatter.pubDate.toString().slice(0, 10)}`
                : `Written on ${frontmatter.pubDate.toString().slice(0, 10)}`}
            </p>
          )
        }
      </div>
      <!-- image -->
      {
        frontmatter.image && (
          <img src={frontmatter.image.url} alt={frontmatter.title} />
        )
      }
      <!-- content -->
      <slot />

      <!-- tags -->
      {
        frontmatter.tags && frontmatter.tags.length > 0 && (
          <>
            <div class="flex flex-row gap-1 text-sm">
              tags: [
              {frontmatter.tags.map((tag) => (
                <a
                  class="text-gray-500"
                  href={getRelativeLocaleUrl(lang, `/tags/${tag}`)}
                >
                  {tag}
                </a>
              ))}
              <a href={getRelativeLocaleUrl(lang, "/tags")}> all</a>]
            </div>
          </>
        )
      }
    </article>
  </Card>
</Layout>
